/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/test/java/service/ModelGenerator.e.vm.java
 */
package com.dddzer.repository;

import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Singleton;
import com.dddzer.domain.Account;
import com.dddzer.domain.Category;
import com.dddzer.domain.Part;
import com.dddzer.repository.AccountGenerator;
import com.dddzer.repository.AccountRepository;
import com.dddzer.repository.CategoryGenerator;
import com.dddzer.repository.CategoryRepository;
import com.dddzer.util.ValueGenerator;

/**
 * Helper class to create transient entities instance for testing purposes.
 * Simple properties are pre-filled with random values.
 */
@SuppressWarnings("unused")
@Named
@Singleton
public class PartGenerator {

    /**
     * Returns a new Part instance filled with random values.
     */
    public Part getPart() {
        Part part = new Part();

        // primary key column must be set manually
        part.setId(ValueGenerator.getUniqueInteger());
        // simple attributes follows
        part.setName("a");
        part.setModel("a");
        part.setSerial("a");
        part.setPartCode("a");
        part.setPartName("a");
        // mandatory relation
        Category category = categoryGenerator.getCategory();
        categoryRepository.save(category);
        part.setCategory(category);
        // mandatory relation
        Account account = accountGenerator.getAccount();
        accountRepository.save(account);
        part.setAccount(account);
        return part;
    }

    @Inject
    private CategoryRepository categoryRepository;
    @Inject
    private CategoryGenerator categoryGenerator;
    @Inject
    private AccountRepository accountRepository;
    @Inject
    private AccountGenerator accountGenerator;
}