--
-- (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
-- Source code generated by Celerio, a Jaxio product
-- Want to use Celerio within your company? email us at info@jaxio.com
-- Follow us on twitter: @springfuse
-- Template pack-backend-jpa:src/main/sql/h2/01-create.p.vm.sql
--
DROP ALL objects;

CREATE TABLE account (
	id INTEGER(10) not null
	,login VARCHAR(100) not null
	,password VARCHAR(100) not null
	,email VARCHAR(100) not null
	,is_enabled BIT
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON account (id);
CREATE UNIQUE INDEX IF NOT EXISTS login_UNIQUE
	ON account (login);
CREATE UNIQUE INDEX IF NOT EXISTS password_UNIQUE
	ON account (password);
ALTER TABLE account ALTER COLUMN id IDENTITY;

CREATE TABLE account_role (
	account_id INTEGER(10) not null
	,role_id INTEGER(10) not null
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON account_role (account_id,role_id);
CREATE INDEX IF NOT EXISTS fk_member_role_1_idx
	ON account_role (account_id);
CREATE INDEX IF NOT EXISTS fk_member_role_2_idx
	ON account_role (role_id);
CREATE PRIMARY KEY 
	ON account_role (account_id,role_id);

CREATE TABLE category (
	id INTEGER(10) not null
	,description_fr VARCHAR(45)
	,description_en VARCHAR(45)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON category (id);
ALTER TABLE category ALTER COLUMN id IDENTITY;

CREATE TABLE faq_answer (
	id INTEGER(10) not null
	,question VARCHAR(200)
	,faq_question_id INTEGER(10) not null
	,account_id INTEGER(10) not null
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON faq_answer (id);
CREATE INDEX IF NOT EXISTS fk_faq_answer_account1_idx
	ON faq_answer (account_id);
CREATE INDEX IF NOT EXISTS fk_FAQ_ANSWER_FAQ_QUESTION1_idx
	ON faq_answer (faq_question_id);
ALTER TABLE faq_answer ALTER COLUMN id IDENTITY;

CREATE TABLE faq_question (
	id INTEGER(10) not null
	,anwser VARCHAR(200)
	,account_id INTEGER(10) not null
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON faq_question (id);
CREATE INDEX IF NOT EXISTS fk_FAQ_QUESTION_ACCOUNT1_idx
	ON faq_question (account_id);
ALTER TABLE faq_question ALTER COLUMN id IDENTITY;

CREATE TABLE part (
	id INTEGER(10) not null
	,account_id INTEGER(10) not null
	,name VARCHAR(45)
	,model VARCHAR(45)
	,serial VARCHAR(45)
	,part_code VARCHAR(45)
	,part_name VARCHAR(45)
	,category_id INTEGER(10) not null
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON part (id);
CREATE INDEX IF NOT EXISTS fk_PART_CATEGORY1_idx
	ON part (category_id);
CREATE INDEX IF NOT EXISTS fk_PART_ACCOUNT1_idx
	ON part (account_id);
ALTER TABLE part ALTER COLUMN id IDENTITY;

CREATE TABLE product (
	id INTEGER(10) not null
	,product_type_id INTEGER(10) not null
	,product_size INTEGER(10)
	,product_file_name VARCHAR(255)
	,product_content_type VARCHAR(45)
	,product_binary LONGVARBINARY(65535)
	,description_ VARCHAR(255)
	,price DECIMAL(10)
	,part_id INTEGER(10) not null
	,accout_id INTEGER(10)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON product (id);
CREATE INDEX IF NOT EXISTS fk_product_product_type1_idx
	ON product (product_type_id);
CREATE INDEX IF NOT EXISTS fk_product_part1_idx
	ON product (part_id);
CREATE INDEX IF NOT EXISTS fk_PRODUCT_ACCOUNT1_idx
	ON product (accout_id);
ALTER TABLE product ALTER COLUMN id IDENTITY;

CREATE TABLE product_type (
	id INTEGER(10) not null
	,name VARCHAR(45)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON product_type (id);
ALTER TABLE product_type ALTER COLUMN id IDENTITY;

CREATE TABLE role (
	id INTEGER(10) not null
	,role_name VARCHAR(100) not null
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON role (id);
CREATE UNIQUE INDEX IF NOT EXISTS role_name_UNIQUE
	ON role (role_name);
ALTER TABLE role ALTER COLUMN id IDENTITY;

CREATE TABLE user (
	id INTEGER(10) not null
	,email VARCHAR(100)
	,enbled TINYINT(3)
	,first_name VARCHAR(100)
	,last_name VARCHAR(100)
	,street VARCHAR(100)
	,city VARCHAR(100)
	,country VARCHAR(100)
	,zip VARCHAR(100)
	,creation_date TIMESTAMP
	,creation_author VARCHAR(100)
	,modification_date TIMESTAMP
	,modification_author VARCHAR(100)
	,version INTEGER(10)
	,account_id INTEGER(10) not null
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON user (id);
CREATE INDEX IF NOT EXISTS fk_USER_ACCOUNT2_idx
	ON user (account_id);
ALTER TABLE user ALTER COLUMN id IDENTITY;


ALTER TABLE account_role 
	ADD CONSTRAINT FK_MEMBER_ROLE_1
		FOREIGN KEY (account_id)
			REFERENCES account (id);
ALTER TABLE account_role 
	ADD CONSTRAINT FK_MEMBER_ROLE_2
		FOREIGN KEY (role_id)
			REFERENCES role (id);
ALTER TABLE faq_answer 
	ADD CONSTRAINT FK_FAQ_ANSWER_FAQ_QUESTION1
		FOREIGN KEY (faq_question_id)
			REFERENCES faq_question (id);
ALTER TABLE faq_answer 
	ADD CONSTRAINT FK_FAQ_ANSWER_ACCOUNT1
		FOREIGN KEY (account_id)
			REFERENCES account (id);
ALTER TABLE faq_question 
	ADD CONSTRAINT FK_FAQ_QUESTION_ACCOUNT1
		FOREIGN KEY (account_id)
			REFERENCES account (id);
ALTER TABLE part 
	ADD CONSTRAINT FK_PART_ACCOUNT1
		FOREIGN KEY (account_id)
			REFERENCES account (id);
ALTER TABLE part 
	ADD CONSTRAINT FK_PART_CATEGORY1
		FOREIGN KEY (category_id)
			REFERENCES category (id);
ALTER TABLE product 
	ADD CONSTRAINT FK_PRODUCT_PART1
		FOREIGN KEY (part_id)
			REFERENCES part (id);
ALTER TABLE product 
	ADD CONSTRAINT FK_PRODUCT_PRODUCT_TYPE1
		FOREIGN KEY (product_type_id)
			REFERENCES product_type (id);
ALTER TABLE product 
	ADD CONSTRAINT FK_PRODUCT_ACCOUNT1
		FOREIGN KEY (accout_id)
			REFERENCES account (id);
ALTER TABLE user 
	ADD CONSTRAINT FK_USER_ACCOUNT2
		FOREIGN KEY (account_id)
			REFERENCES account (id);
