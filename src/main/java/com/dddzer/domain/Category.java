/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/main/java/project/domain/Entity.e.vm.java
 */
package com.dddzer.domain;

import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Size;
import org.apache.log4j.Logger;
import org.springframework.context.i18n.LocaleContextHolder;
import com.dddzer.domain.IdentifiableHashBuilder;
import com.google.common.base.Objects;

@Entity
@Table(name = "category")
public class Category implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Category.class);

    // Raw attributes
    private Integer id; // pk
    private String descriptionFr;
    private String descriptionEn;

    // ---------------------------
    // Constructors
    // ---------------------------

    public Category() {
    }

    public Category(Integer primaryKey) {
        setId(primaryKey);
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------

    // -- [id] ------------------------

    @Column(name = "id", precision = 10)
    @GeneratedValue
    @Id
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Transient
    public boolean isIdSet() {
        return id != null;
    }

    // -- [descriptionFr] ------------------------

    @Size(max = 45)
    @Column(name = "description_fr", length = 45)
    public String getDescriptionFr() {
        return descriptionFr;
    }

    public void setDescriptionFr(String descriptionFr) {
        this.descriptionFr = descriptionFr;
    }

    // -- [descriptionEn] ------------------------

    @Size(max = 45)
    @Column(name = "description_en", length = 45)
    public String getDescriptionEn() {
        return descriptionEn;
    }

    public void setDescriptionEn(String descriptionEn) {
        this.descriptionEn = descriptionEn;
    }

    /**
     * Set the default values.
     */
    public void initDefaultValues() {
    }

    /**
     * equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Category && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    // -----------------------
    // Localization shortcuts
    // -----------------------

    /**
     * Locale aware getter for fields whose column's name starts
     * with description and ends with _xx where xx is a language code.
     */
    @Transient
    public String getDescription() {
        String language = LocaleContextHolder.getLocale().getLanguage().toLowerCase();
        if (language.equals("fr")) {
            return getDescriptionFr();
        }
        if (language.equals("en")) {
            return getDescriptionEn();
        }
        throw new IllegalStateException("Could not find the proper getter for current locale's language " + language);
    }

    /**
     * Construct a readable string representation for this Category instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .add("id", getId()) //
                .add("descriptionFr", getDescriptionFr()) //
                .add("descriptionEn", getDescriptionEn()) //
                .toString();
    }
}