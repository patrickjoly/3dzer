/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/main/java/project/repository/RepositoryImpl.e.vm.java
 */
package com.dddzer.repository;

import javax.inject.Inject;

import org.apache.log4j.Logger;

import javax.inject.Named;
import javax.inject.Singleton;

import com.dddzer.dao.support.GenericDao;
import com.dddzer.repository.support.RepositoryImpl;
import com.dddzer.domain.ProductType;
import com.dddzer.dao.ProductTypeDao;

/**
 * Default implementation of the {@link ProductTypeRepository} interface.
 * Note: you may use multiple DAO from this layer.
 * @see ProductTypeRepository
 */
@Named("productTypeRepository")
@Singleton
public class ProductTypeRepositoryImpl extends RepositoryImpl<ProductType, Integer> implements ProductTypeRepository {

    @SuppressWarnings("unused")
    private static final Logger log = Logger.getLogger(ProductTypeRepositoryImpl.class);

    protected ProductTypeDao productTypeDao;

    @Inject
    public void setProductTypeDao(ProductTypeDao productTypeDao) {
        this.productTypeDao = productTypeDao;
    }

    /**
     * Dao getter used by the {@link RepositoryImpl}.
     */
    @Override
    public GenericDao<ProductType, Integer> getDao() {
        return productTypeDao;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductType getNew() {
        return new ProductType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductType getNewWithDefaults() {
        ProductType result = getNew();
        result.initDefaultValues();
        return result;
    }

}