/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/main/java/project/repository/RepositoryImpl.e.vm.java
 */
package com.dddzer.repository;

import javax.inject.Inject;

import org.apache.log4j.Logger;

import javax.inject.Named;
import javax.inject.Singleton;
import org.springframework.transaction.annotation.Transactional;

import com.dddzer.dao.support.GenericDao;
import com.dddzer.repository.support.RepositoryImpl;
import com.dddzer.domain.Part;
import com.dddzer.dao.PartDao;

/**
 * Default implementation of the {@link PartRepository} interface.
 * Note: you may use multiple DAO from this layer.
 * @see PartRepository
 */
@Named("partRepository")
@Singleton
public class PartRepositoryImpl extends RepositoryImpl<Part, Integer> implements PartRepository {

    private static final Logger log = Logger.getLogger(PartRepositoryImpl.class);

    protected PartDao partDao;

    @Inject
    public void setPartDao(PartDao partDao) {
        this.partDao = partDao;
    }

    /**
     * Dao getter used by the {@link RepositoryImpl}.
     */
    @Override
    public GenericDao<Part, Integer> getDao() {
        return partDao;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Part getNew() {
        return new Part();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Part getNewWithDefaults() {
        Part result = getNew();
        result.initDefaultValues();
        return result;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    @Transactional
    public void delete(Part part) {
        if (part == null) {
            if (log.isDebugEnabled()) {
                log.debug("Skipping deletion for null model!");
            }

            return;
        }

        // remove the reference from the associated account
        if (part.getAccount() != null) {
            part.getAccount().removePart(part);
        }

        super.delete(part);
    }
}