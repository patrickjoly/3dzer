/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.dddzer.web.domain;

import static com.dddzer.dao.support.EntitySelector.newEntitySelector;
import static com.dddzer.domain.FaqQuestion_.account;
import static com.dddzer.domain.FaqQuestion_.accountId;
import javax.inject.Named;
import org.springframework.context.annotation.Scope;
import com.dddzer.dao.support.EntitySelector;
import com.dddzer.dao.support.SearchParameters;
import com.dddzer.domain.Account;
import com.dddzer.domain.FaqQuestion;
import com.dddzer.web.domain.support.GenericSearchForm;

/**
 * View Helper to find/select {@link FaqQuestion}.
 * It exposes a {@link FaqQuestion} instance so it can be used in search by Example query.
 */
@Named
@Scope("conversation")
public class FaqQuestionSearchForm extends GenericSearchForm<FaqQuestion, FaqQuestionSearchForm> {
    private static final long serialVersionUID = 1L;

    private FaqQuestion faqQuestion = new FaqQuestion();
    private EntitySelector<FaqQuestion, Account, Integer> accountSelector = newEntitySelector(accountId);

    public FaqQuestion getFaqQuestion() {
        return faqQuestion;
    }

    @Override
    protected FaqQuestion getEntity() {
        return faqQuestion;
    }

    // Selectors for x-to-one associations
    public EntitySelector<FaqQuestion, Account, Integer> getAccountSelector() {
        return accountSelector;
    }

    public SearchParameters toSearchParameters() {
        return new SearchParameters() //
                .anywhere() //
                .leftJoin(account) //
                .entitySelector(accountSelector) //
        ;
    }

    @Override
    public FaqQuestionSearchForm newInstance() {
        return new FaqQuestionSearchForm();
    }

    @Override
    public void resetWithOther(FaqQuestionSearchForm other) {
        this.faqQuestion = other.getFaqQuestion();
        this.accountSelector = other.getAccountSelector();
    }
}