/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-spring-conversation:src/main/java/domain/EditForm.e.vm.java
 */
package com.dddzer.web.domain;

import static com.dddzer.web.conversation.ConversationHolder.getCurrentConversation;
import javax.inject.Inject;
import javax.inject.Named;
import org.springframework.context.annotation.Scope;
import com.dddzer.domain.FaqAnswer;
import com.dddzer.domain.FaqQuestion;
import com.dddzer.repository.FaqAnswerRepository;
import com.dddzer.web.conversation.ConversationContext;
import com.dddzer.web.domain.FaqQuestionController;
import com.dddzer.web.domain.support.GenericEditForm;

/**
 * View Helper/Controller to edit {@link FaqAnswer}.
 */
@Named
@Scope("conversation")
public class FaqAnswerEditForm extends GenericEditForm<FaqAnswer, Integer> {

    @Inject
    public void setFaqAnswerRepository(FaqAnswerRepository faqAnswerRepository) {
        setRepository(faqAnswerRepository);
    }

    public FaqAnswer getFaqAnswer() {
        return getEntity();
    }

    // --------------------------------------------------
    // Support for auto-complete and callback many to one 
    // --------------------------------------------------

    public void setSelectedFaqQuestion(FaqQuestion faqQuestion) {
        // detach the currently set target if present
        //  1) to prevent any potential modification to go to the db
        //  2) to reduce session size        	
        /*
        if (getFaqAnswer().getFaqQuestion() != null) {
            getCurrentConversation().getEntityManager().detach(getFaqAnswer().getFaqQuestion());
        } */

        if (faqQuestion != null) {
            getFaqAnswer().setFaqQuestion(getCurrentConversation().getEntityManager().merge(faqQuestion));
        } else {
            getFaqAnswer().setFaqQuestion(null);
        }
    }

    public FaqQuestion getSelectedFaqQuestion() {
        return getFaqAnswer().getFaqQuestion();
    }

    // --------------------------------------------
    // Actions for faqQuestion association
    // --------------------------------------------

    public String viewFaqQuestion() {
        ConversationContext<FaqQuestion> ctx = FaqQuestionController.newEditContext(getFaqAnswer().getFaqQuestion());
        ctx.setLabelWithKey("faqAnswer_faqQuestion");
        getCurrentConversation().setNextContextSubReadOnly(ctx);
        return ctx.view();
    }
}